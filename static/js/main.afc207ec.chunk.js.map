{"version":3,"sources":["assets/login.jpg","assets/404.jpg","redux/user/user.types.js","firebase/firebase.utils.js","layout/pages/homepage/homepage.component.jsx","layout/components/form-input/form-input.component.jsx","layout/pages/sign-in/sign-in.component.jsx","redux/auth/auth.actions.js","layout/pages/NOT-FOUND/notfound.component.jsx","layout/pages/homepage/maps/maps.jsx","App.js","redux/user/user.actions.js","serviceWorker.js","redux/auth/auth.reducer.js","redux/user/user.reducer.jsx","redux/root-reducer.js","index.js"],"names":["module","exports","UserActionTypes","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","a","async","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","adminStatus","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup","HomePage","state","lat","lon","alt","head","speed","date","this","setState","props","coords","latitude","longitude","altitude","heading","collection","update","intervalId","setInterval","timer","bind","isGeolocationAvailable","isGeolocationEnabled","React","Component","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","FormInput","handleChange","label","otherProps","className","onChange","value","length","SignIn","event","target","name","handleSubmit","e","preventDefault","signIn","password","authError","to","src","login","onSubmit","type","required","onClick","connect","dispatch","creds","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","NotFound","notfound","AnyReactComponent","style","transform","color","SimpleMap","long","location","height","width","map","loc","bootstrapURLKeys","key","defaultZoom","defaultCenter","lng","App","compose","ordered","firestoreConnect","unsubscribeFromAuth","setCurrentUser","onAuthStateChanged","onSnapshot","snapShot","id","data","exact","path","component","user","payload","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducers","action","INITIAL_STATE","currentUser","userReducer","rootReducers","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.afc207ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.63c6450d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404.a41a6c81.jpg\";","export const UserActionTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nconst config ={\r\n  apiKey: \"AIzaSyB9Zz2B5UfT5zF5WvPT2KVjvzC2NmJHWEs\",\r\n  authDomain: \"kiyje-7f725.firebaseapp.com\",\r\n  databaseURL: \"https://kiyje-7f725.firebaseio.com\",\r\n  projectId: \"kiyje-7f725\",\r\n  storageBucket: \"kiyje-7f725.appspot.com\",\r\n  messagingSenderId: \"277714092542\",\r\n  appId: \"1:277714092542:web:937e6948637638b7d080af\",\r\n  measurementId: \"G-KEYBWRRJW3\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  \r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n  \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  \r\n    const snapShot = await userRef.get();\r\n  \r\n    if (!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          adminStatus:false,\r\n        });\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      }\r\n    }\r\n    return userRef;\r\n  };\r\n  export const auth = firebase.auth();\r\n  export const firestore= firebase.firestore();\r\n  const provider = new firebase.auth.GoogleAuthProvider();//enable google-signin pop-up\r\n  provider.setCustomParameters({promt:'selected_account'});\r\n  export const signInWithGoogle= () => auth.signInWithPopup(provider);\r\n  export default firebase;","import React from \"react\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport firebase from './../../../firebase/firebase.utils';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            lat:'80',\r\n            lon:'',\r\n            alt:'',\r\n            head:'',\r\n            speed:'',\r\n        }\r\n    }\r\n    timer() {\r\n        var date=new Date();\r\n        this.setState({\r\n          lat:this.props.coords.latitude,\r\n          lon:this.props.coords.longitude,\r\n          alt:this.props.coords.altitude,\r\n          head:this.props.coords.heading,\r\n          speed:this.props.coords.speed,\r\n        });\r\n        firebase.firestore().collection(\"location\").doc(\"GcnDSBuUoO0s1WIG0EjL\").update({\r\n            lat: this.state.lat,\r\n            lon:this.state.lon,\r\n            createdAt:date\r\n        });\r\n      }\r\n      componentDidMount() {\r\n        this.intervalId = setInterval(this.timer.bind(this), 10000);\r\n      }\r\n    render() {\r\n        return !this.props.isGeolocationAvailable ? (\r\n            <div>Your browser does not support Geolocation</div>\r\n        ) : !this.props.isGeolocationEnabled ? (\r\n            <div>Geolocation is not enabled</div>\r\n        ) : this.props.coords ? (\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>latitude</td>\r\n                        <td>{this.props.coords.latitude}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>longitude</td>\r\n                        <td>{this.props.coords.longitude}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>altitude</td>\r\n                        <td>{this.props.coords.altitude}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>heading</td>\r\n                        <td>{this.props.coords.heading}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>speed</td>\r\n                        <td>{this.props.coords.speed}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        ) : (\r\n            <div>Getting the location data&hellip; </div>\r\n        );\r\n    }\r\n}\r\nexport default geolocated({\r\n    positionOptions: {\r\n        enableHighAccuracy: true,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n})(HomePage);","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? 'shrink' : ''\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../../redux/auth/auth.actions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport login from '../../../assets/login.jpg';\r\n\r\nimport {signInWithGoogle} from '../../../firebase/firebase.utils';\r\n\r\nimport './sign-in.styles.css';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            name:'',\r\n            password:''\r\n        };\r\n      }\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render()\r\n    {\r\n      const {authError,auth}=this.props\r\n      if(auth.uid) return <Redirect to='/home' />\r\n        return(\r\n            <div className=\"login-form-container\">\r\n                <div className=\"left\">\r\n                    <img src={login} alt=\"login\"/>\r\n                    <h1>Login For More Functionality . . . .</h1>\r\n                </div>\r\n                <div className=\"login-content\">\r\n                    <h1>LOGIN</h1>\r\n                  <form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <div className=\"form-group\">\r\n                            <FormInput\r\n                                name='name'\r\n                                type='text'\r\n                                handleChange={this.handleChange}\r\n                                value={this.state.name}\r\n                                label='Enter your id'\r\n                                required\r\n                            />\r\n                            <FormInput\r\n                                name='password'\r\n                                type='password'\r\n                                handleChange={this.handleChange}\r\n                                value={this.state.password}\r\n                                label='Enter your password'\r\n                                required\r\n                            />\r\n                        </div>\r\n                      <div className=\"submit-button\">\r\n                          <button type=\"submit\">LOGIN</button>\r\n                      </div>\r\n                  </form>\r\n                  <div>\r\n                      <button className=\"google-login\" onClick={signInWithGoogle}>Google SignIn <i className=\"fab fa-google\"></i></button>\r\n                  </div>\r\n                  <div className=\"login-alert\">{authError ? <p>{authError}</p>:null}</div>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n      auth:state.firebase.auth\r\n  }\r\n}\r\nconst mapDispathToProps=(dispatch)=>{\r\n  return{\r\n      signIn:(creds)=>dispatch(signIn(creds))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispathToProps)(SignIn);","export const signIn=(credentials)=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_ERROR',err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport notfound from '../../../assets/404.jpg';\r\n\r\nimport './notfound.styles.css';\r\n\r\nconst NotFound =()=>{\r\n    return(\r\n        <div className=\"notfound\">\r\n            <div className=\"top\">\r\n                <img src={notfound} alt=\"page-error\"/>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <h1>Page Not found</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect } from 'react-redux-firebase';\r\nconst AnyReactComponent = () => <div style={{transform:'scale(3)',color:'red'}}><i className=\"fas fa-map-pin\"></i></div>;\r\n \r\nclass SimpleMap extends Component {\r\n    state={\r\n        lat:'',\r\n        long:''\r\n    }\r\n \r\n  render() {\r\n      const {location}=this.props;\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        {\r\n            location && location.map(loc=>{\r\n                var longitude=loc.lon;\r\n                var latitude=loc.lat;\r\n                return(\r\n                    <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyCw1Cu5QmZqsFLWq-D7m12E3Qqjjj13xWY\" }}\r\n                    defaultZoom={17}\r\n                    defaultCenter={{ lat: latitude,\r\n                        lng:  longitude}}\r\n                    >\r\n                    <AnyReactComponent\r\n                        lat={latitude}\r\n                        lng={longitude}\r\n                    />\r\n                    </GoogleMapReact>\r\n                )\r\n            })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        location:state.firestore.ordered.location,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'location'},\r\n    ])\r\n)(SimpleMap);\r\n\r\n\r\n// import _ from \"lodash\";\r\n// import React from \"react\";\r\n// import { compose, withProps } from \"recompose\";\r\n// import {\r\n//   withScriptjs,\r\n//   withGoogleMap,\r\n//   GoogleMap,\r\n//   Marker\r\n// } from \"react-google-maps\";\r\n\r\n// const MyMapComponent = compose(\r\n//   withProps({\r\n//     googleMapURL:\r\n//       \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCw1Cu5QmZqsFLWq-D7m12E3Qqjjj13xWY&v=3.exp&libraries=geometry,drawing,places\",\r\n//     loadingElement: <div style={{ height: `100%` }} />,\r\n//     containerElement: <div style={{ height: `100vh` }} />,\r\n//     mapElement: <div style={{ height: `100%` }} />\r\n//   }),\r\n//   withScriptjs,\r\n//   withGoogleMap\r\n// )(props => (\r\n//   <GoogleMap defaultZoom={8} defaultCenter={{ lat: 22, lng: 88 }}>\r\n//     <Marker position={{ lat: 22.553488, lng: 88.358292 }} />\r\n//   </GoogleMap>\r\n// ));\r\n\r\n// const enhance = _.identity;\r\n\r\n// const ReactGoogleMaps = () => [\r\n//   <MyMapComponent key=\"map\" />\r\n// ];\r\n\r\n// export default enhance(ReactGoogleMaps);","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport { setCurrentUser } from './redux/user/user.actions';\nimport {auth,createUserProfileDocument } from './firebase/firebase.utils';\n\nimport './App.css';\n\nimport HomePage from './layout/pages/homepage/homepage.component';\nimport SignIn from './layout/pages/sign-in/sign-in.component';\nimport NotFound from './layout/pages/NOT-FOUND/notfound.component';\nimport SimpleMap from './layout/pages/homepage/maps/maps';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const {setCurrentUser} =this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n          });\n        });\n      }\n      else{\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  render(){\n  return (\n    <div className=\"App\">\n          <BrowserRouter>\n              <Switch>\n                {/* <Route exact path=\"/\" component={SignIn} /> */}\n                {/* <Route exact path=\"/home\" component={SimpleMap} /> */}\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path='*' exact component={NotFound} />\n              </Switch>\n          </BrowserRouter>\n    </div>\n  );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null,mapDispatchToProps)(App);\n\n","import { UserActionTypes } from './user.types';\r\n\r\nexport const setCurrentUser = user => ({\r\n    type: UserActionTypes.SET_CURRENT_USER,\r\n    payload: user\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    authError:null\r\n}\r\n\r\nconst authReducers=(state=initState,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError:'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducers;","import {UserActionTypes} from './user.types';\r\n\r\nconst INITIAL_STATE={\r\n    currentUser:null\r\n}\r\nconst userReducer = (state = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case UserActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser:action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer} from 'react-redux-firebase'\r\nimport authReducers from './auth/auth.reducer';\r\nimport userReducer from './user/user.reducer';\r\n\r\nconst rootReducers=combineReducers({\r\n    auth:authReducers,\r\n    user:userReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducers from './redux/root-reducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase';\nimport firebase from './firebase/firebase.utils';\n\nconst store=createStore(rootReducers,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(firebase),\n        reactReduxFirebase(firebase,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n    ));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}